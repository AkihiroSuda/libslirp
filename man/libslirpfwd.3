.\"* libslirp: slirp as a library
.\" Copyright (C) 2014 Renzo Davoli. University of Bologna. <renzo@cs.unibo.it>
.\"
.\" This library is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU Lesser General Public
.\" License as published by the Free Software Foundation; either
.\" version 2.1 of the License, or (at your option) any later version.
.\"
.\" This library is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Lesser General Public License for more details.
.\"
.\" You should have received a copy of the GNU Lesser General Public
.\" License along with this library; if not, write to the Free Software
.\" Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

.TH libslirpfwd 3 2016-11-16 "VirtualSquare" "Linux Programmer's Manual"
.SH NAME
slirp_add_fwd, slirp_remove_fwd, slirp_add_unixfwd, slirp_remove_unixfwd, slirp_add_cmdexec
.SH SYNOPSIS
.B #include <libslirp.h>
.br
.BI "int slirp_add_fwd(SLIRP * " slirp ", int "  is_udp ","
.BI "struct in_addr " host_addr ", int " host_port ","
.BI "struct in_addr " guest_addr ", int " guest_port ");"
.br
.BI "int slirp_remove_fwd(SLIRP * " slirp ", int "  is_udp ","
.BI "struct in_addr " host_addr ", int " host_port ");"
.br
.BI "int slirp_add_unixfwd(SLIRP * " slirp ","
.BI "struct in_addr " guest_addr ", int" guest_port ", char * " path ");"
.br
.BI "int slirp_remove_unixfwd(SLIRP * " slirp ","
.BI "struct in_addr " guest_addr ", int " guest_port ");"
.br
.BI "int slirp_add_cmdexec(SLIRP * " slirp ", int " do_pty " , const void * " args ","
.BI "struct in_addr " guest_addr ", int " guest_port ");"
.sp
These functions are provided by libslirp. Link with \fI-lslirp\fR.
.SH DESCRIPTION
Slirp, see liblirp(3), is a TCP/IP emulator. Slirp generates a virtual network using standard user privileges (no need for root access
of CAP_NET_ADMIN).
These functions manage port forwarding services.

\fBslirp_add_fwd\fR and \fBslirp_remove_fwd\fR respectively add and remove udp or tcp port forwarding services (depending upon the value of \fIis_udp\fR).
\fIhost_addr\fR and \fIhost_port\fR are the IP address and port number bound for the service in the host system. All the connections or datagrams
to \fIhost_addr\fR and \fIhost_port\fR will be diverted to \fIguest_addr\fR and \fIguest_port\fR in the slirp virtual network.

\fBslirp_add_unixfwd\fR and \fBslirp_remove_unixfwd\fR respectively add and remove forwarding service towards a PF_UNIX stream socket on the hosting system.
All the connections from a node of the virtual network to \fIguest_addr\fR and \fIguest_port\fR will be diverted to the PF_UNIX
bound to the pathname \fIpath\fR. This feature is commonly used to run X-window clients in the virtual network (e.g. the value of \fIpath\fR
could be \fB/tmp/.X11-unix/X0\fR).

\fBslirp_unix_fwd\fR defines a diversion towards a command. A TCP connection to  \fIguest_addr\fR and \fIguest_port\fR  will cause the
command whose argument array is \fIargs\fR to be started. A pty(7) pseudoterminal is created if \fIdo_pty\fR is true.

.SH RETURN VALUE
All these functions return 0 in case of success, -1 otherwise.

.SH SEE ALSO
libslirp(3),
pty(3)
.SH BUGS

Bug reports should be addressed to <info@virtualsquare.org>
.SH AUTHOR
Renzo Davoli <renzo@cs.unibo.it>: the idea of slirp is by Danny
Gasparovski. This implementation of slirp has been forked from Qemu.
Please refer to the LICENSE file in the source tree main directory for information about the license.
